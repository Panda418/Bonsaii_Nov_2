@model Bonsaii.Models.Train.TrainStart

@{
    ViewBag.Title = "Create";
}

<link href="~/Content/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.min.js"></script>
<script src="~/Scripts/datetimepicker/bootstrap-datetimepicker.zh-CN.js"></script>
<script src="~/Scripts/bootstrap3-typeahead.min.js"></script>
<script src="~/Scripts/qiao.js-master/qiao.js"></script>
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TrainStart</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BillTypeNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillTypeNumber, new { htmlAttributes = new { @class = "form-control",@dataprovide="typeahead"} })
                @Html.ValidationMessageFor(model => model.BillTypeNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BillTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillTypeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BillTypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BillNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BillNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrainType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrainType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class=" input-group date form_date col-md-6" style="width:52%" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class=" input-group date form_date col-md-6" style="width:52%" data-date="" data-date-format="dd MM yyyy" data-link-field="dtp_input2" data-link-format="yyyy-mm-dd">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrainCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrainCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrainCost, "", new { @class = "text-danger" })
            </div>
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TellNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TellNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TellNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.AuditStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AuditStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AuditStatus, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remark,4,120, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        @*上传excel*@
        <div class="form-group">
            @Html.Label("选择培训人员", new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                <input type="file" name="excel" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

<script>
    /*树状结构*/
    $('#treepanel').bstree({
        url: '/TrainStart',
        checkbox: true,
    });

    /*单据类别选择*/
    $('#BillTypeNumber').typeahead
    ({
        source: function (query, process) {
            $.ajax({
                url: '/TrainStart/BillTypeNumberSearch',
                type: 'POST',
                data: { number: query },
                success: function (data) {
                    if (data.success == true) {
                        process(data.data);
                    }
                }
            })
        },
    });
    /*实现自动填充单据名称字段。填充单号字段。*/
    function sendBillTypeNumber() {
        var checkText = $('#BillTypeNumber').find("option:selected").text();
        var checkValue = $('#BillTypeNumber').val();
        checkValue = checkValue.split(" ")[0];
        $("#BillTypeNumber").val(checkValue);
        $.ajax({
            url: '/TrainStart/SendBillTypeNumber',
            data: {BillTypeNumber: checkValue},
            type: 'POST',
            success:function (result) {
                for (var x in result) {
                    var tmp = "#" + x;// result[x]是Value值
                    // 必须用attr方式
                    $(tmp).attr('value', result[x]);
                    // console.info(result[x]);
                }
            },
        });
    }
    $('#BillTypeNumber').change(function () {
        //var tmp = $('#StaffNumber').val();
        if ($('#BillTypeNumber').val() == "") {
            $(':input').val("");
        }
        else
            sendBillTypeNumber();
    });

    /*日期插件*/
    $('.form_date').datetimepicker({
        language: 'zh-CN',
        format: 'yyyy/mm/dd',
        weekStart: 0,
        todayBtn: 1,
        autoclose: 1,
        todayHighlight: 1,
        startView: 2,
        minView: 2,
        forceParse: 0
    });


</script>